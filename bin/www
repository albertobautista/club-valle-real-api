#!/usr/bin/env node

/***********************************************************************************************/
/******************************************** Imports ******************************************/
/***********************************************************************************************/
const httpApp   = require('../index');
const debug     = require('debug')('clubvallereal-api:server');
const http      = require('http');

/***********************************************************************************************/
/************************************* Module Implementation ***********************************/
/***********************************************************************************************/
const httpServer  = httpApp.app;
const port        = process.env.SERVER_PORT;
let   server      = undefined;

// Create server
httpServer.set('port', port);
server = http.createServer(httpServer);

// Start server
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for server error
 * @param error Error
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for server start
 */
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

module.exports = server;